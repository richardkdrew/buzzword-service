resources:
- name: buzzword-service
  type: git
  source:
    uri: {{github-uri}}
    branch: master
    private_key: {{github-private-key}}

- name: dotnet-image
  type: docker-image
  source:
    repository: microsoft/dotnet
    tag: '1.0.0-core'

- name: buzzword-service-image
  type: docker-image
  source: 
    repository: richardkdrew/buzzword-service
    username: {{dockerhub-user}}
    password: {{dockerhub-password}}

- name: version
  type: semver
  source:
    driver: git
    initial_version: 0.0.1
    uri: {{github-uri-bump-semver}}
    branch: version
    file: version
    private_key: {{github-private-key}}  

jobs:
- name: minor
  public: true
  serial: true
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: minor}
  - put: version
    params: {file: version/number}

- name: major
  public: true
  serial: true
  serial_groups: [version]
  plan:
  - get: version
    params: {bump: major}
  - put: version
    params: {file: version/number}

- name: build
  public: true
  serial: true
  plan:
  - aggregate:  
    - get: buzzword-service
      trigger: true
    - get: dotnet-image
      params: {save: true}
    - get: version
  - task: build
    config:
      platform: linux

      image_resource:
        type: docker-image
        source:
          repository: microsoft/dotnet
          version: 1.0.0-preview2-sdk

      inputs:
       - name: buzzword-service
       - name: version
    
      outputs:
        - name: docker-build-context

      run:
        path: bash
        args:
        - -c
        - |
          set -e -x

          # setting local version label
          version="$(cat version/number)"
          if [ -z "$version" ]; then
            echo "missing version number"
            exit 1
          fi
          
          workingFolder=$PWD/buzzword-service/src/buzzword-service
          configuration="Release"          
          framework="netcoreapp1.0"
          pubFolder="$workingFolder/bin/$environment/$framework/publish"
          output=$PWD/docker-build-context
          runtimeId="debian.8-x64"                              

          cd $workingFolder

          # running dotnet restore
          dotnet restore --verbosity Error
          # create the artificats
          dotnet publish -f $framework -r $runtimeId -c $configuration -o $pubFolder #--version-suffix $version        
          # making 'package' available as an output          
          cp -r $pubFolder/* $output

  - put: buzzword-service-image
    params: 
      build: docker-build-context
      load_base: dotnet-image
      tag: version/number
      tag_as_latest: true    
  - put: version
    params: {bump: patch}
